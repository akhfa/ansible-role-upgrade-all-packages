---

name: "CI tests"

on:
  pull_request:
  push:
  release:
    types:
      - published

defaults:
  run:
    working-directory: 'ansible-role-upgrade-all-packages'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-role-upgrade-all-packages'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint ansible

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint .

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - centos7
          - centos8
          - ubuntu2004
          - ubuntu2204
          - debian11

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-role-upgrade-all-packages'

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Docker (Ubuntu)
        if: ${{ startsWith(matrix.distro, 'ubuntu') || startsWith(matrix.distro, 'debian') }}
        run: |
          # Add Docker's official GPG key:
          apt-get update
          apt-get install -y ca-certificates curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Install Docker (Red Hat-based)
        if: ${{ startsWith(matrix.distro, 'centos') }}
        run: |
          dnf install -y dnf-utils
          dnf-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
          dnf install -y docker-ce docker-ce-cli containerd.io
          systemctl start docker

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker

      - name: disable apparmor on ubuntu systems
        if: ${{ startsWith(matrix.distro, 'ubuntu') }}
        run: |
            set -x
            apt-get install apparmor-profiles
            ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
            apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  # release:
  #   name: Release to galaxy
  #   needs:
  #     - lint
  #     - molecule
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: galaxy
  #       uses: robertdebock/galaxy-action@1.2.1
  #       with:
  #         galaxy_api_key: ${{ secrets.galaxy_api_key }}
